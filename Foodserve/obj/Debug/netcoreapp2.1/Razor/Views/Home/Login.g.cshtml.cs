#pragma checksum "D:\project\FoodServe\FoodServe\Views\Home\Login.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e0e6f2c933a470c1de27c3e7a1345cb108695b21"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Login), @"mvc.1.0.view", @"/Views/Home/Login.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Login.cshtml", typeof(AspNetCore.Views_Home_Login))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\project\FoodServe\FoodServe\Views\_ViewImports.cshtml"
using FoodServe;

#line default
#line hidden
#line 2 "D:\project\FoodServe\FoodServe\Views\_ViewImports.cshtml"
using FoodServe.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e0e6f2c933a470c1de27c3e7a1345cb108695b21", @"/Views/Home/Login.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7d1b8bb95b31f53e3cae67ca198146eccca3aef1", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Login : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\project\FoodServe\FoodServe\Views\Home\Login.cshtml"
  
    ViewData["Title"] = "Login";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";

#line default
#line hidden
            BeginContext(95, 2633, true);
            WriteLiteral(@"
<style>
    td {
        padding-right:25px;
        padding-bottom:5px;
    }
</style>

<h2>Login</h2>


<div>
    <table>
        <tr>
            <td><label>USERNAME</label></td> 
            <td><input id=""txtUsername"" type=""text"" placeholder=""USERNAME"" /></td>
        </tr>
        <tr>
            <td><label>PASSWORD</label></td> 
            <td><input id=""txtPassword"" type=""password"" placeholder=""password"" /></td>
        </tr>
        <tr>
            <td colspan=""2"">
                <center>
                    <input id=""btnLogin"" type=""submit"" value=""LOGIN"" required onclick=""login()"" />
                </center>
            </td>
        </tr>
    </table>
</div>

<script>
        async function login() {
            const apiUrl = 'https://localhost:44319/api/login/login'; 
            const username = document.getElementById('txtUsername').value;
            const password = document.getElementById('txtPassword').value;

            const requestBody = {
  ");
            WriteLiteral(@"              username: username,
                password: password
            };

            try {
                const response = await fetch(apiUrl, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(requestBody)
                });

                if (response.ok) {
                    const apiUrl2 = 'https://localhost:44319/api/USER/' + username
                    const response2 = await fetch(apiUrl2, {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json'
                        } 
                    });

                    const data = await response2.json();

                    document.cookie = ""userid="" + username;
                    document.cookie = ""name="" + data.name;
                    document.cookie = ""role="" + data.role;

         ");
            WriteLiteral(@"           console.log('Login successful');
                    window.location.href = '/Home/Main/' ;
                } else {
                    //console.error('Failed to login. Status code:', response.status);
                    //const errorResponse = await response.json();
                    //console.error('Error message:', errorResponse);
                    window.alert('Invalid Username or Password.');
                }
            } catch (error) {
                console.error('An error occurred during login:', error);
            }
        }
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
